"""整理國籍、學歷"""
import pandas as pd
import numpy as np
import os

"""整理國籍"""
def process_country(input_file, output_file):
    df = pd.read_parquet(input_file)

    df = df[['國籍']].drop_duplicates()

    # 建立國籍編號
    df['country_num'] = df['國籍'].str[:3]

    country_map = {
        '054': '01 東歐', '055': '01 東歐', '056': '01 東歐', '057': '01 東歐', '063': '01 東歐', '071': '01 東歐', '073': '01 東歐', '077': '01 東歐', '079': '01 東歐', '097': '01 東歐',
        '052': '02 西歐', '053': '02 西歐', '059': '02 西歐', '060': '02 西歐', '069': '02 西歐', '076': '02 西歐', '100': '02 西歐',
        '061': '03 南歐', '062': '03 南歐', '066': '03 南歐', '067': '03 南歐', '068': '03 南歐', '072': '03 南歐', '074': '03 南歐', '093': '03 南歐', '094': '03 南歐', '095': '03 南歐', '096': '03 南歐', '098': '03 南歐', '099': '03 南歐',
        '058': '04 北歐', '064': '04 北歐', '065': '04 北歐', '070': '04 北歐', '075': '04 北歐', '078': '04 北歐', '081': '04 北歐', '082': '04 北歐', '085': '04 北歐',
        '102': '05 北美', '113': '05 北美', '115': '05 北美',
        '101': '06 中南美', '103': '06 中南美', '104': '06 中南美', '105': '06 中南美', '106': '06 中南美', '107': '06 中南美', '108': '06 中南美', '109': '06 中南美', '110': '06 中南美', '111': '06 中南美', '112': '06 中南美', '125': '06 中南美', '116': '06 中南美', '117': '06 中南美', '118': '06 中南美', '119': '06 中南美', '120': '06 中南美', '121': '06 中南美', '122': '06 中南美', '123': '06 中南美', '124': '06 中南美', '126': '06 中南美', '127': '06 中南美', '173': '06 中南美', '174': '06 中南美', '175': '06 中南美', '176': '06 中南美',
        '036': '07 大洋洲', '037': '07 大洋洲', '038': '07 大洋洲', '046': '07 大洋洲', '047': '07 大洋洲', '048': '07 大洋洲', '049': '07 大洋洲', '051': '07 大洋洲', '080': '07 大洋洲', '114': '07 大洋洲',
        '012': '08 東亞', '014': '08 東亞', '020': '08 東亞', '029': '08 東亞', '030': '08 東亞', '031': '08 東亞', '039': '08 東亞', '042': '08 東亞', '044': '08 東亞', '045': '08 東亞', '084': '08 東亞',
        '003': '09 東南亞', '004': '09 東南亞', '005': '09 東南亞', '008': '09 東南亞', '016': '09 東南亞', '018': '09 東南亞', '023': '09 東南亞', '024': '09 東南亞', '026': '09 東南亞', '028': '09 東南亞', '032': '09 東南亞', '033': '09 東南亞', '034': '09 東南亞', '043': '09 東南亞',
        '002': '10 亞洲其他地區', '006': '10 亞洲其他地區', '007': '10 亞洲其他地區', '019': '10 亞洲其他地區', '021': '10 亞洲其他地區', '022': '10 亞洲其他地區', '035': '10 亞洲其他地區', '086': '10 亞洲其他地區', '087': '10 亞洲其他地區', '088': '10 亞洲其他地區', '089': '10 亞洲其他地區', '090': '10 亞洲其他地區', '001': '10 亞洲其他地區', '009': '10 亞洲其他地區', '010': '10 亞洲其他地區', '011': '10 亞洲其他地區', '013': '10 亞洲其他地區', '015': '10 亞洲其他地區', '017': '10 亞洲其他地區', '025': '10 亞洲其他地區', '027': '10 亞洲其他地區', '040': '10 亞洲其他地區', '041': '10 亞洲其他地區', '083': '10 亞洲其他地區', '091': '10 亞洲其他地區', '092': '10 亞洲其他地區', '165': '10 亞洲其他地區',
        '050': '12 其他', '178': '12 其他', '179': '12 其他'
    }

    df['country_a'] = df['country_num'].map(country_map).fillna('12 其他')

    df.to_parquet(output_file, index=False)

input_file = "\\\192.168.1.105\112年度\ilosh112-M221_僑外生在臺就業追蹤分析之研究\data\f1-2.parquet"
output_file = "\\\192.168.1.105\112年度\ilosh112-M221_僑外生在臺就業追蹤分析之研究\data\country.parquet"

process_country(input_file, output_file)

""" 整理學歷"""

# 設定工作目錄
data_path = r"\\192.168.1.105\112年度\ilosh112-M221_僑外生在臺就業追蹤分析之研究\data\\"
input_path = r"\\192.168.1.105\資料攜出入\112年度\ilosh112-M221_僑外生在臺就業追蹤分析之研究\攜入\M221攜入_20230905\\"

# 讀取資料 (parquet 格式)
pro_dep_f = pd.read_parquet(input_path + "pro_dep_f.parquet")

# 欄位重新命名
pro_dep_f.rename(columns={"department": "系所", "學門": "細學類"}, inplace=True)

# 去除空格
pro_dep_f["細學類"] = pro_dep_f["細學類"].str.strip()

# 產生細學類3碼
pro_dep_f["細學類3碼"] = pro_dep_f["細學類"].str[:3]

# 讀取 depart 資料並合併
depart = pd.read_parquet(data_path + "depart.parquet")
pro_dep_f = pd.concat([pro_dep_f, depart], ignore_index=True)

# 過濾不需要的資料
pro_dep_f = pro_dep_f[~pro_dep_f["細學類3碼"].isin(["111", "999"]) & (pro_dep_f["細學類"] != "")]

# 欄位名稱統一 (系所 -> depart)，轉換為小寫
pro_dep_f.rename(columns={"系所": "depart"}, inplace=True)
pro_dep_f["depart"] = pro_dep_f["depart"].str.lower()

# 保留需要的欄位，去除重複值
pro_dep_f = pro_dep_f[["depart", "細學類", "細學類3碼"]].drop_duplicates(subset=["depart"])

# 儲存整理後的資料
pro_dep_f.to_parquet(data_path + "depart_new.parquet", index=False)

# 讀取打工資料檔
f1_2 = pd.read_parquet(data_path + "f1-2.parquet")

# 依據護照號碼排序並去除重複值 (保留最新資料)
f1_2.sort_values(by=["護照號碼", "發文日期"], ascending=[True, False], inplace=True)
f1_2.drop_duplicates(subset=["護照號碼"], keep="first", inplace=True)

# 欄位重新命名與轉小寫
f1_2.rename(columns={"護照號碼": "id1", "居留證號": "id2", "就讀學校": "school", "系所": "depart", "學制": "學制名稱"}, inplace=True)
f1_2["depart"] = f1_2["depart"].str.lower()

# 定義學制對應
system_map = {
    "高中": "01", "學士(二年制)": "02", "學士(四年制)": "03", "專科(二年制)": "04",
    "專科(五年制)": "05", "碩士": "06", "博士": "07", "海青班": "08", "僑生先修部": "09",
    "語言中心": "10", "其他": "11"
}

# 產生 system_num 欄位
f1_2["system_num"] = f1_2["學制名稱"].apply(lambda x: next((v for k, v in system_map.items() if k in x), "11"))

# 學校名稱統一
school_replace_map = {
    "中州科技大學": "中州學校財團法人中州科技大學",
    "中華大學": "中華大學學校財團法人中華大學",
    "嘉南藥理大學": "嘉藥學校財團法人嘉南藥理大學",
    "國立空中大學": "國立空中大學",
    "國立陽明交通大學": "國立陽明交通大學",
    "南華大學": "南華大學",
}

f1_2["school"] = f1_2["school"].replace(school_replace_map)

# 讀取 school 資料並合併
school = pd.read_parquet(data_path + "school.parquet")
f1_2 = f1_2.merge(school, how="left", on="school")

# 體制與公私立的判定
f1_2["體制"] = np.where(f1_2["school"].str.contains("高中|女中|高級中學|高級中等"), "普通高中", f1_2["體制"])
f1_2["體制"] = np.where(f1_2["school"].str.contains("高工|商工|工商|工農|工家|家商|職業"), "技職高中", f1_2["體制"])

f1_2["公私立"] = np.where(f1_2["school"].str.contains("國立|市立"), "公立", "私立")

# 讀取 depart_new 並合併
depart_new = pd.read_parquet(data_path + "depart_new.parquet")
f1_2 = f1_2.merge(depart_new, how="left", on="depart")

# 產生 dep_num
f1_2["dep_num"] = f1_2["細學類3碼"]
f1_2["dep_num"] = f1_2["dep_num"].replace("111", "999").fillna("999")

# 學門對應
dep_map = {
    "01": "教育學門", "02": "藝術學門", "03": "人文學門", "04": "語文學門",
    "05": "社會及行為科學學門", "06": "新聞學與圖書資訊學門", "07": "商業及管理學門",
    "13": "資訊通訊科技學門", "14": "工程及工程業學門", "21": "醫藥衛生學門",
    "23": "餐旅及民間服務學門", "27": "其他學門"
}

f1_2["dep"] = f1_2["dep_num"].map(dep_map).fillna("其他學門")

# 讀取 lb_id 並合併
lb_id = pd.read_parquet(data_path + "lb_id.parquet")
f1_2 = f1_2.merge(lb_id[["id", "id1"]], how="left", on="id1")

# 儲存最終檔案
f1_2.to_parquet(data_path + "學歷n2.parquet", index=False)

print("資料整理完成，已儲存為學歷n2.parquet")
